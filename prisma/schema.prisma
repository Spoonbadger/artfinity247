// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Order {
  id              String      @id @default(cuid())
  stripeSessionId String      @unique
  email           String
  amountTotal     Int
  currency        String
  paymentStatus   String
  createdAt       DateTime    @default(now())
  shippingName    String?
  shippingAddress String?
  receiptSentAt   DateTime?
  shippingStatus  String      @default("pending") // "pending", "shipped", "delivered"
  items           OrderItem[]
}

model OrderItem {
  id      String @id @default(cuid())
  orderId String
  order   Order  @relation(fields: [orderId], references: [id], onDelete: Cascade)

  artworkId String?
  artwork   Artwork? @relation(fields: [artworkId], references: [id], onDelete: SetNull) // ‚Üê keep items if artwork removed

  slug      String?
  size      String? // small/medium/large
  unitPrice Int? // cents
  quantity  Int?
  lineTotal Int?
  title      String?
  artistName String?
  imageUrl   String?
  printCost    Int?
  shippingCost Int?
  laborCost    Int?
  websiteCost  Int?

  @@unique([orderId, artworkId, size])
  @@index([orderId])
  @@index([artworkId])
}

model Payout {
  id         String   @id @default(cuid())
  artistId   String
  artist     Artist   @relation(fields: [artistId], references: [id])
  month      String   // e.g. "2025-09"
  amountCents Int
  paidAt     DateTime?  // null = unpaid, date = when marked paid
  createdAt  DateTime   @default(now())

  @@unique([artistId, month])
}


model Artist {
  id           String    @id @default(cuid())
  name         String
  email        String    @unique
  password     String
  profileImage String?
  phone        String
  city         String
  citySlug     String @default("")
  state        String?
  country      String?
  slug         String    @unique
  bio          String?   @default("")
  createdAt    DateTime    @default(now())
  artworks     Artwork[] // one to many
  role      Role     @default(USER)
  venmoHandle  String? @unique
  payouts   Payout[]

  @@index([citySlug])
}

enum Role {
  USER
  ADMIN
}

model Artwork {
  id           String      @id @default(cuid())
  title        String
  slug         String?     @unique // Unquestion mark this at some point.
  description  String
  imageUrl     String
  markupSmall  Int?        @default(0)
  markupMedium Int?        @default(0)
  markupLarge  Int?        @default(0)
  artistId     String
  artist       Artist      @relation(fields: [artistId], references: [id])
  createdAt    DateTime    @default(now())
  OrderItem    OrderItem[]
}
