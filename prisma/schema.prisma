generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Order {
  id              String      @id @default(cuid())
  stripeSessionId String      @unique
  email           String
  amountTotal     Int
  currency        String
  paymentStatus   String
  createdAt       DateTime    @default(now())
  shippingName    String?
  shippingAddress String?
  receiptSentAt   DateTime?
  shippingStatus  String      @default("pending")
  items           OrderItem[]
}

model OrderItem {
  id           String   @id @default(cuid())
  orderId      String
  artworkId    String?
  slug         String?
  size         String?
  unitPrice    Int?
  quantity     Int?
  lineTotal    Int?
  title        String?
  artistName   String?
  imageUrl     String?
  laborCost    Int?
  printCost    Int?
  shippingCost Int?
  websiteCost  Int?
  artwork      Artwork? @relation(fields: [artworkId], references: [id])
  order        Order    @relation(fields: [orderId], references: [id], onDelete: Cascade)

  @@unique([orderId, artworkId, size])
  @@index([orderId])
  @@index([artworkId])
}

model Payout {
  id          String    @id @default(cuid())
  artistId    String
  month       String
  amountCents Int
  paidAt      DateTime?
  createdAt   DateTime  @default(now())
  artist      Artist    @relation(fields: [artistId], references: [id])

  @@unique([artistId, month])
}

model Artist {
  id           String    @id @default(cuid())
  name         String
  email        String    @unique
  password     String
  profileImage String?
  phone        String
  city         String
  citySlug     String    @default("")
  state        String?
  country      String?
  slug         String    @unique
  bio          String?   @default("")
  createdAt    DateTime  @default(now())
  role         Role      @default(USER)
  venmoHandle  String?   @unique
  artworks     Artwork[]
  payouts      Payout[]

  @@index([citySlug])
}

model Artwork {
  id           String      @id @default(cuid())
  title        String
  slug         String?     @unique
  description  String
  imageUrl     String
  markupSmall  Int?        @default(0)
  markupMedium Int?        @default(0)
  markupLarge  Int?        @default(0)
  artistId     String
  createdAt    DateTime    @default(now())
  artist       Artist      @relation(fields: [artistId], references: [id])
  OrderItem    OrderItem[]
}

enum Role {
  USER
  ADMIN
}
